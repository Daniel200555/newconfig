server.port=8980

eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true
eureka.client.service-url.defaultZone=http://localhost:8761/eureka/
logging.pattern.console=%C{1.} [%-5level] %d{HH:mm:ss} - %msg%n


#ftp.host=192.168.205.185
ftp.host=192.168.0.107
ftp.port=10001
ftp.user=danya
ftp.password=1234
ftp.pathStandard=/home/danya/ftp/files/
ftp.link=ftp://danya:1234@192.168.0.107:10001
#ftp.link=ftp://danya:1234@192.168.205.185:10001/

spring.servlet.multipart.max-file-size=-1
spring.servlet.multipart.max-request-size=-1

#spring.data.mongodb.host=localhost
#spring.data.mongodb.port=27017
#spring.data.mongodb.database=FileData
#spring.data.mongodb.username=danila
#spring.data.mongodb.password=12345

spring.data.mongodb.uri=mongodb://danil:1234@192.168.0.107:27017/FileData

spring.kafka.bootstrap-servers=192.168.0.107:9092
spring.kafka.consumer.group-id=group-id
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=*
spring.kafka.producer.properties.max.request.size=2000000000
spring.kafka.producer.properties.buffer.memory=2000000000

spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer: org.springframework.kafka.support.serializer.JsonSerializer

#spring.kafka.producer.bootstrap-servers: localhost:9092
private.host=localhost
private.port=8982
